---
header-id: refactoring-the-prototype
---

# プロトタイプのリファクタリング

[TOC levels=1-4]

前回では、ゲストブックポートレットプロトタイプを作成しました。 それから`service.xml`ファイルを記述してアプリケーションのデータモデルを定義し、Service Builderを使用してバックエンドコード（モデル、サービス、および永続レイヤー）を生成しました。 また、適切な拡張ポイントであるエンティティの`* LocalServiceImpl`クラスを使用して、サービスメソッドも追加しました。 次に、元のプロトタイプを新しいバックエンドと統合して、完全に機能するアプリケーションを作成する必要があります。

プロトタイプと作成するアプリケーションには多くの違いがあります。 バックエンドでは、1つの大きな違いを既に説明しました。ユーザーは、それぞれ独自のエントリを持つ複数のゲストブックを作成できます。 ただしフロントエンドでは、サイト管理者のみがゲストブックを作成できる必要があります。 したがって、Guestbook Adminという別のポートレットを作成し、それをサイトのコンテンツメニューに配置します。

このアプリケーションをプロトタイプから本格的なLiferay Webアプリケーションに変えるには、次の変更を行います。

  - ビューレイヤーのフォルダ構造を変更して、管理ポートレットを構成します。
  - ユーザーがアプリケーションを簡単に見つけられるよう、表示カテゴリを設定します。
  - アプリケーションのテキストキーを保存するファイルを作成します。
  - 新しいService Builderベースのバックエンドを呼び出すようにコントローラを変更します。
  - タブに複数のゲストブックを表示できるようにビューをアップデートします。

これで開始の準備ができました。

<a class="go-link btn btn-primary" href="/docs/7-1/tutorials/-/knowledge_base/t/organizing-folders-for-larger-applications"> <span class="icon-circle-arrow-right"></span></a>

